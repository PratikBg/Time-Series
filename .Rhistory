arima100.111.fc <-forecast(arima100.111,h=12)
plot(arima100.111.fc)
lines(testData, col="red")
legend("topleft",lty=1,bty = "n",col=c("red","blue"),c("TestData","ARIMAPred"))
forecasted.val <-forecast(arima100.111.fc,h=12)
model1.accuracy <- accuracy(forecasted.val,testData)
model1.accuracy <- data.frame(model1.accuracy)
model1.train.MAPE <- model1.accuracy[1, 'MAPE']
model1.test.MAPE <- model1.accuracy[2, 'MAPE']
arima100.111 <- arima(trainData, order=c(0,0,1), season=list(order=c(1,0,1), period=12))
arima100.111.fc <-forecast(arima100.111,h=12)
plot(arima100.111.fc)
lines(testData, col="red")
legend("topleft",lty=1,bty = "n",col=c("red","blue"),c("Test Data","ARIMAPred"))
forecasted.val <-forecast(arima100.111.fc,h=12)
model1.accuracy <- accuracy(forecasted.val,testData)
model1.accuracy <- data.frame(model1.accuracy)
model1.train.MAPE <- model1.accuracy[1, 'MAPE']
model1.test.MAPE <- model1.accuracy[2, 'MAPE']
arima100.111 <- arima(trainData, order=c(0,0,1), season=list(order=c(1,0,1), period=12))
arima100.111.fc <-forecast(arima100.111,h=12)
plot(arima100.111.fc)
lines(testData, col="red")
legend("topleft",lty=1,bty = "n",col=c("red","blue"),c("Test Data","ARIMA Predicted"))
forecasted.val <-forecast(arima100.111.fc,h=12)
model1.accuracy <- accuracy(forecasted.val,testData)
model1.accuracy <- data.frame(model1.accuracy)
model1.train.MAPE <- model1.accuracy[1, 'MAPE']
model1.test.MAPE <- model1.accuracy[2, 'MAPE']
ma1.101 <- arima(trainData, order=c(0,0,1), season=list(order=c(1,0,1), period=12))
ma1.101.fc <-forecast(ma1.101,h=12)
plot(ma1.101.fc)
lines(testData, col="red")
legend("topleft",lty=1,bty = "n",col=c("red","blue"),c("Test Data","ARIMA Predicted"))
forecasted.val <-forecast(ma1.101.fc,h=12)
model1.accuracy <- accuracy(forecasted.val,testData)
model1.accuracy <- data.frame(model1.accuracy)
model1.train.MAPE <- model1.accuracy[1, 'MAPE']
model1.test.MAPE <- model1.accuracy[2, 'MAPE']
ma2.101 <- arima(trainData, order=c(0,0,2), season=list(order=c(1,0,1), period=12))
ma2.101.fc <-forecast(ma2.101,h=12)
plot(ma2.101.fc)
lines(testData, col="red")
legend("topleft",lty=1,bty = "n",col=c("red","blue"),c("Test Data","ARIMA Predicted"))
forecasted.val1 <-forecast(ma2.101.fc,h=12)
model1.accuracy1 <- accuracy(forecasted.val1,testData)
model1.accuracy1 <- data.frame(model1.accuracy1)
model1.train.MAPE1 <- model1.accuracy1[1, 'MAPE']
model1.test.MAPE1 <- model1.accuracy1[2, 'MAPE']
ma3.101 <- arima(trainData, order=c(0,0,3), season=list(order=c(1,0,1), period=12))
ma3.101 <- arima(trainData, order=c(0,0,2), season=list(order=c(1,0,1), period=12))
ma3.101.fc <-forecast(ma3.101,h=12)
plot(ma3.101.fc)
lines(testData, col="red")
legend("topleft",lty=1,bty = "n",col=c("red","blue"),c("Test Data","ARIMA Predicted"))
forecasted.val2 <-forecast(ma3.101.fc,h=12)
model1.accuracy2 <- accuracy(forecasted.val2,testData)
model1.accuracy2 <- data.frame(model1.accuracy2)
model1.train.MAPE2 <- model1.accuracy2[1, 'MAPE']
model1.test.MAPE2 <- model1.accuracy2[2, 'MAPE']
ma3.101 <- arima(trainData, order=c(0,0,1), season=list(order=c(1,0,2), period=12))
ma3.101.fc <-forecast(ma3.101,h=12)
plot(ma3.101.fc)
lines(testData, col="red")
legend("topleft",lty=1,bty = "n",col=c("red","blue"),c("Test Data","ARIMA Predicted"))
forecasted.val2 <-forecast(ma3.101.fc,h=12)
model1.accuracy2 <- accuracy(forecasted.val2,testData)
model1.accuracy2 <- data.frame(model1.accuracy2)
model1.train.MAPE2 <- model1.accuracy2[1, 'MAPE']
model1.test.MAPE2 <- model1.accuracy2[2, 'MAPE']
ma3.101 <- arima(trainData, order=c(0,0,1), season=list(order=c(1,0,3), period=12))
ma3.101.fc <-forecast(ma3.101,h=12)
plot(ma3.101.fc)
lines(testData, col="red")
legend("topleft",lty=1,bty = "n",col=c("red","blue"),c("Test Data","ARIMA Predicted"))
forecasted.val2 <-forecast(ma3.101.fc,h=12)
model1.accuracy2 <- accuracy(forecasted.val2,testData)
model1.accuracy2 <- data.frame(model1.accuracy2)
model1.train.MAPE2 <- model1.accuracy2[1, 'MAPE']
model1.test.MAPE2 <- model1.accuracy2[2, 'MAPE']
ma3.101 <- arima(trainData, order=c(0,0,1), season=list(order=c(2,0,2), period=12))
ma3.101 <- arima(trainData, order=c(1,0,1), season=list(order=c(1,0,2), period=12))
ma3.101 <- arima(trainData, order=c(0,0,1), season=list(order=c(1,0,2), period=12))
ma3.101.fc <-forecast(ma3.101,h=12)
plot(ma3.101.fc)
lines(testData, col="red")
legend("topleft",lty=1,bty = "n",col=c("red","blue"),c("Test Data","ARIMA Predicted"))
forecasted.val2 <-forecast(ma3.101.fc,h=12)
model1.accuracy2 <- accuracy(forecasted.val2,testData)
model1.accuracy2 <- data.frame(model1.accuracy2)
model1.train.MAPE2 <- model1.accuracy2[1, 'MAPE']
model1.test.MAPE2 <- model1.accuracy2[2, 'MAPE']
ma3.101 <- arima(trainData, order=c(0,0,2), season=list(order=c(1,0,2), period=12))
ma3.101.fc <-forecast(ma3.101,h=12)
plot(ma3.101.fc)
lines(testData, col="red")
legend("topleft",lty=1,bty = "n",col=c("red","blue"),c("Test Data","ARIMA Predicted"))
forecasted.val2 <-forecast(ma3.101.fc,h=12)
model1.accuracy2 <- accuracy(forecasted.val2,testData)
model1.accuracy2 <- data.frame(model1.accuracy2)
model1.train.MAPE2 <- model1.accuracy2[1, 'MAPE']
model1.test.MAPE2 <- model1.accuracy2[2, 'MAPE']
ma3.101 <- arima(trainData, order=c(0,0,2), season=list(order=c(0,0,2), period=12))
ma3.101.fc <-forecast(ma3.101,h=12)
plot(ma3.101.fc)
lines(testData, col="red")
legend("topleft",lty=1,bty = "n",col=c("red","blue"),c("Test Data","ARIMA Predicted"))
forecasted.val2 <-forecast(ma3.101.fc,h=12)
model1.accuracy2 <- accuracy(forecasted.val2,testData)
model1.accuracy2 <- data.frame(model1.accuracy2)
model1.train.MAPE2 <- model1.accuracy2[1, 'MAPE']
model1.test.MAPE2 <- model1.accuracy2[2, 'MAPE']
ma3.101 <- arima(trainData, order=c(1,0,2), season=list(order=c(1,0,2), period=12))
ma3.101 <- arima(trainData, order=c(1,0,2), season=list(order=c(0,0,2), period=12))
ma3.101 <- arima(trainData, order=c(0,1,2), season=list(order=c(1,0,2), period=12))
ma3.101.fc <-forecast(ma3.101,h=12)
plot(ma3.101.fc)
lines(testData, col="red")
legend("topleft",lty=1,bty = "n",col=c("red","blue"),c("Test Data","ARIMA Predicted"))
forecasted.val2 <-forecast(ma3.101.fc,h=12)
model1.accuracy2 <- accuracy(forecasted.val2,testData)
model1.accuracy2 <- data.frame(model1.accuracy2)
model1.train.MAPE2 <- model1.accuracy2[1, 'MAPE']
model1.test.MAPE2 <- model1.accuracy2[2, 'MAPE']
ma3.101 <- arima(trainData, order=c(0,0,3), season=list(order=c(1,0,2), period=12))
ma3.101 <- arima(trainData, order=c(0,0,2), season=list(order=c(1,0,2), period=12))
ma3.101.fc <-forecast(ma3.101,h=12)
plot(ma3.101.fc)
lines(testData, col="red")
legend("topleft",lty=1,bty = "n",col=c("red","blue"),c("Test Data","ARIMA Predicted"))
forecasted.val2 <-forecast(ma3.101.fc,h=12)
model1.accuracy2 <- accuracy(forecasted.val2,testData)
model1.accuracy2 <- data.frame(model1.accuracy2)
model1.train.MAPE2 <- model1.accuracy2[1, 'MAPE']
model1.test.MAPE2 <- model1.accuracy2[2, 'MAPE']
ma3.101 <- arima(trainData, order=c(0,0,2), season=list(order=c(1,1,2), period=12))
ma3.101.fc <-forecast(ma3.101,h=12)
plot(ma3.101.fc)
lines(testData, col="red")
legend("topleft",lty=1,bty = "n",col=c("red","blue"),c("Test Data","ARIMA Predicted"))
forecasted.val2 <-forecast(ma3.101.fc,h=12)
model1.accuracy2 <- accuracy(forecasted.val2,testData)
model1.accuracy2 <- data.frame(model1.accuracy2)
model1.train.MAPE2 <- model1.accuracy2[1, 'MAPE']
model1.test.MAPE2 <- model1.accuracy2[2, 'MAPE']
ma3.101 <- arima(trainData, order=c(0,0,2), season=list(order=c(1,2,2), period=12))
ma3.101 <- arima(trainData, order=c(0,0,2), season=list(order=c(1,2,1), period=12))
ma3.101 <- arima(trainData, order=c(0,0,2), season=list(order=c(1,2,0), period=12))
ma3.101 <- arima(trainData, order=c(0,1,2), season=list(order=c(1,1,2), period=12))
ma3.101.fc <-forecast(ma3.101,h=12)
plot(ma3.101.fc)
lines(testData, col="red")
legend("topleft",lty=1,bty = "n",col=c("red","blue"),c("Test Data","ARIMA Predicted"))
forecasted.val2 <-forecast(ma3.101.fc,h=12)
model1.accuracy2 <- accuracy(forecasted.val2,testData)
model1.accuracy2 <- data.frame(model1.accuracy2)
model1.train.MAPE2 <- model1.accuracy2[1, 'MAPE']
model1.test.MAPE2 <- model1.accuracy2[2, 'MAPE']
ma3.101 <- arima(trainData, order=c(0,0,2), season=list(order=c(1,1,2), period=12))
ma3.101.fc <-forecast(ma3.101,h=12)
plot(ma3.101.fc)
lines(testData, col="red")
legend("topleft",lty=1,bty = "n",col=c("red","blue"),c("Test Data","ARIMA Predicted"))
forecasted.val2 <-forecast(ma3.101.fc,h=12)
model1.accuracy2 <- accuracy(forecasted.val2,testData)
model1.accuracy2 <- data.frame(model1.accuracy2)
model1.train.MAPE2 <- model1.accuracy2[1, 'MAPE']
model1.test.MAPE2 <- model1.accuracy2[2, 'MAPE']
ma3.101 <- arima(trainData, order=c(0,0,2), season=list(order=c(1,0,2), period=12))
ma3.101.fc <-forecast(ma3.101,h=12)
plot(ma3.101.fc)
lines(testData, col="red")
legend("topleft",lty=1,bty = "n",col=c("red","blue"),c("Test Data","ARIMA Predicted"))
forecasted.val2 <-forecast(ma3.101.fc,h=12)
model1.accuracy2 <- accuracy(forecasted.val2,testData)
model1.accuracy2 <- data.frame(model1.accuracy2)
model1.train.MAPE2 <- model1.accuracy2[1, 'MAPE']
model1.test.MAPE2 <- model1.accuracy2[2, 'MAPE']
ma2.102 <- arima(trainData, order=c(0,0,2), season=list(order=c(1,0,2), period=12))
ma2.102.fc <-forecast(ma3.101,h=12)
plot(ma2.102.fc)
lines(testData, col="red")
legend("topleft",lty=1,bty = "n",col=c("red","blue"),c("Test Data","ARIMA Predicted"))
forecasted.val2 <-forecast(ma2.102.fc,h=12)
model1.accuracy2 <- accuracy(forecasted.val2,testData)
model1.accuracy2 <- data.frame(model1.accuracy2)
model1.train.MAPE2 <- model1.accuracy2[1, 'MAPE']
model1.test.MAPE2 <- model1.accuracy2[2, 'MAPE']
ma2.112 <- arima(trainData, order=c(0,0,2), season=list(order=c(1,1,2), period=12))
ma2.112.fc <-forecast(ma3.101,h=12)
plot(ma2.112.fc)
lines(testData, col="red")
legend("topleft",lty=1,bty = "n",col=c("red","blue"),c("Test Data","ARIMA Predicted"))
forecasted.val2 <-forecast(ma3.101.fc,h=12)
model1.accuracy2 <- accuracy(forecasted.val2,testData)
model1.accuracy2 <- data.frame(model1.accuracy2)
model1.train.MAPE2 <- model1.accuracy2[1, 'MAPE']
model1.test.MAPE2 <- model1.accuracy2[2, 'MAPE']
ma2.112 <- arima(trainData, order=c(0,0,2), season=list(order=c(1,1,2), period=12))
ma2.112.fc <-forecast(ma3.101,h=12)
plot(ma2.112.fc)
lines(testData, col="red")
legend("topleft",lty=1,bty = "n",col=c("red","blue"),c("Test Data","ARIMA Predicted"))
forecasted.val3 <-forecast(ma3.101.fc,h=12)
model1.accuracy3 <- accuracy(forecasted.val3,testData)
model1.accuracy3 <- data.frame(model1.accuracy3)
model1.train.MAPE3 <- model1.accuracy3[1, 'MAPE']
model1.test.MAPE3 <- model1.accuracy3[2, 'MAPE']
ma2.102 <- arima(trainData, order=c(0,0,2), season=list(order=c(1,0,2), period=12))
ma2.102.fc <-forecast(ma3.101,h=12)
plot(ma2.102.fc)
lines(testData, col="red")
legend("topleft",lty=1,bty = "n",col=c("red","blue"),c("Test Data","ARIMA Predicted"))
forecasted.val2 <-forecast(ma2.102.fc,h=12)
model1.accuracy2 <- accuracy(forecasted.val2,testData)
model1.accuracy2 <- data.frame(model1.accuracy2)
model1.train.MAPE2 <- model1.accuracy2[1, 'MAPE']
model1.test.MAPE2 <- model1.accuracy2[2, 'MAPE']
ma2.102 <- arima(trainData, order=c(0,0,2), season=list(order=c(1,0,2), period=12))
ma2.102.fc <-forecast(ma2.102,h=12)
plot(ma2.102.fc)
lines(testData, col="red")
legend("topleft",lty=1,bty = "n",col=c("red","blue"),c("Test Data","ARIMA Predicted"))
forecasted.val2 <-forecast(ma2.102.fc,h=12)
model1.accuracy2 <- accuracy(forecasted.val2,testData)
model1.accuracy2 <- data.frame(model1.accuracy2)
model1.train.MAPE2 <- model1.accuracy2[1, 'MAPE']
model1.test.MAPE2 <- model1.accuracy2[2, 'MAPE']
ma2.112 <- arima(trainData, order=c(0,0,2), season=list(order=c(1,1,2), period=12))
ma2.112.fc <-forecast(ma2.112,h=12)
plot(ma2.112.fc)
lines(testData, col="red")
legend("topleft",lty=1,bty = "n",col=c("red","blue"),c("Test Data","ARIMA Predicted"))
forecasted.val3 <-forecast(ma3.101.fc,h=12)
model1.accuracy3 <- accuracy(forecasted.val3,testData)
model1.accuracy3 <- data.frame(model1.accuracy3)
model1.train.MAPE3 <- model1.accuracy3[1, 'MAPE']
model1.test.MAPE3 <- model1.accuracy3[2, 'MAPE']
model1.train.MAPE
model1.train.MAPE1
model1.train.MAPE
model1.train.MAPE2
model1.train.MAPE3
model1.train.MAPE4
ma2.112 <- arima(trainData, order=c(0,0,2), season=list(order=c(1,1,2), period=12))
ma2.112.fc <-forecast(ma2.112,h=12)
plot(ma2.112.fc)
lines(testData, col="red")
legend("topleft",lty=1,bty = "n",col=c("red","blue"),c("Test Data","ARIMA Predicted"))
forecasted.val3 <-forecast(ma2.112.fc,h=12)
model1.accuracy3 <- accuracy(forecasted.val3,testData)
model1.accuracy3 <- data.frame(model1.accuracy3)
model1.train.MAPE3 <- model1.accuracy3[1, 'MAPE']
model1.test.MAPE3 <- model1.accuracy3[2, 'MAPE']
model1.train.MAPE
model1.train.MAPE1
model1.train.MAPE2
model1.train.MAPE3
model1.train.MAPE4
ModelsMAPE <- rbind('model1.train.MAPE', 'model1.train.MAPE1', 'model1.train.MAPE2', 'model1.train.MAPE3',
'model1.train.MAPE4')
ModelsMAPE
ModelsMAPE
ModelsMAPE <- rbind(model1.train.MAPE, model1.train.MAPE1, model1.train.MAPE2, model1.train.MAPE3,
model1.train.MAPE4)
ModelsMAPE <- rbind(model1.train.MAPE, model1.train.MAPE1, model1.train.MAPE2, model1.train.MAPE3)
ModelsMAPE
ModelsMAPE <- cbind(model1.train.MAPE, model1.train.MAPE1, model1.train.MAPE2, model1.train.MAPE3)
ModelsMAPE
ModelsMAPE <- rbind(model1.train.MAPE, model1.train.MAPE1, model1.train.MAPE2, model1.train.MAPE3)
ModelsMAPE
ModelsMAPE <- cbind(model1.test.MAPE, model1.test.MAPE1, model1.test.MAPE2, model1.test.MAPE3)
ModelsMAPE
ModelsMAPE
ModelsMAPE[,1] <- c(model1.train.MAPE, model1.train.MAPE1, model1.train.MAPE2, model1.train.MAPE3)
ModelsMAPE = as.matrix(na,4,2)
ModelsMAPE = as.matrix(NA,4,2)
ModelsMAPE[,1] <- c(model1.train.MAPE, model1.train.MAPE1, model1.train.MAPE2, model1.train.MAPE3)
ModelsMAPE = as.matrix(NA)
ModelsMAPE[,1] <- c(model1.train.MAPE, model1.train.MAPE1, model1.train.MAPE2, model1.train.MAPE3)
ModelsMAPE[,2] <- c(model1.test.MAPE, model1.test.MAPE1, model1.test.MAPE2, model1.test.MAPE3)
ModelsMAPE = as.matrix(NA,4,2)
dim(ModelsMAPE)
args(as.matrix)
?as.matrix
ModelsMAPE = as.matrix(NA,nrow = 4, ncol = 2)
ModelsMAPE[,1] <- c(model1.train.MAPE, model1.train.MAPE1, model1.train.MAPE2, model1.train.MAPE3)
ModelsMAPE[,2] <- c(model1.test.MAPE, model1.test.MAPE1, model1.test.MAPE2, model1.test.MAPE3)
ModelsMAPE = as.data.frame(NA,nrow = 4, ncol = 2)
ModelsMAPE[,1] <- c(model1.train.MAPE, model1.train.MAPE1, model1.train.MAPE2, model1.train.MAPE3)
ModelsMAPE = as.data.frame(NA)
ModelsMAPE[,1] <- c(model1.train.MAPE, model1.train.MAPE1, model1.train.MAPE2, model1.train.MAPE3)
ModelsMAPE[,2] <- c(model1.test.MAPE, model1.test.MAPE1, model1.test.MAPE2, model1.test.MAPE3)
c(model1.train.MAPE, model1.train.MAPE1, model1.train.MAPE2, model1.train.MAPE3)
ModelsMAPE = as.data.frame(NA)
ModelsMAPE = as.matrix(NA,nrow = 4, ncol = 2)
dim(ModelsMAPE)
ModelsMAPE = as.matrix(nrow = 4, ncol = 2)
ModelsMAPE = as.matrix(x = 5,nrow = 4, ncol = 2)
ModelsMAPE
ModelsMAPE = as.matrix(NA,nrow = 4, ncol = 2)
ModelsMAPE[,1] <- c(model1.train.MAPE, model1.train.MAPE1, model1.train.MAPE2, model1.train.MAPE3)
ModelsMAPE = as.matrix()
ModelsMAPE[,1] <- c(model1.train.MAPE, model1.train.MAPE1, model1.train.MAPE2, model1.train.MAPE3)
ModelsMAPE = as.data.frame()
ModelsMAPE <-  as.tibble()
ModelsMAPE <-  as.tibble(x = NA)
ModelsMAPE[,1] <- c(model1.train.MAPE, model1.train.MAPE1, model1.train.MAPE2, model1.train.MAPE3)
ModelsMAPE[,2] <- c(model1.test.MAPE, model1.test.MAPE1, model1.test.MAPE2, model1.test.MAPE3)
ModelsMAPE <-  as.tibble(X1,X2)
X1 <- c(model1.train.MAPE, model1.train.MAPE1, model1.train.MAPE2, model1.train.MAPE3)
X2 <- c(model1.test.MAPE, model1.test.MAPE1, model1.test.MAPE2, model1.test.MAPE3)
ModelsMAPE <-  as.tibble(X1,X2)
ModelsMAPE
ModelsMAPE <-  as.tibble(c(X1,X2))
ModelsMAPE
train.mape <- c(model1.train.MAPE, model1.train.MAPE1, model1.train.MAPE2, model1.train.MAPE3)
test.mape <- c(model1.test.MAPE, model1.test.MAPE1, model1.test.MAPE2, model1.test.MAPE3)
table1 <- table(train.mape,test.mape)
table1
shiny::runApp('C:/Users/gundawade.p/OneDrive - Procter and Gamble/Work/SelfPreservation')
mape <- as.data.frame(train.mape, test.mape)
mape
update.packages()
update.packages(ask = F)
warnings()
runApp('C:/Users/gundawade.p/OneDrive - Procter and Gamble/Work/SelfPreservation')
runApp('C:/Users/gundawade.p/OneDrive - Procter and Gamble/Work/SelfPreservation')
runApp('C:/Users/gundawade.p/OneDrive - Procter and Gamble/Work/SelfPreservation')
TimeKillDB <- read.csv(paste0(top_directory,'Databases/TimeKillDB.csv'), sep = ',')
top_directory = "C:/Users/gundawade.p/OneDrive - Procter and Gamble/Work/SelfPreservation/"
TimeKillDB <- read.csv(paste0(top_directory,'Databases/TimeKillDB.csv'), sep = ',')
TimeKillDB$microbe_type
runApp('C:/Users/gundawade.p/OneDrive - Procter and Gamble/Work/SelfPreservation')
runApp('C:/Users/gundawade.p/OneDrive - Procter and Gamble/Work/SelfPreservation')
runApp('C:/Users/gundawade.p/OneDrive - Procter and Gamble/Work/SelfPreservation')
runApp('C:/Users/gundawade.p/OneDrive - Procter and Gamble/Work/SelfPreservation')
runApp('C:/Users/gundawade.p/OneDrive - Procter and Gamble/Work/SelfPreservation')
runApp('C:/Users/gundawade.p/OneDrive - Procter and Gamble/Work/SelfPreservation')
runApp('C:/Users/gundawade.p/OneDrive - Procter and Gamble/Work/SelfPreservation')
runApp('C:/Users/gundawade.p/OneDrive - Procter and Gamble/Work/SelfPreservation')
args(selectInput)
?selectInput
runApp('C:/Users/gundawade.p/OneDrive - Procter and Gamble/Work/SelfPreservation')
mape <- data.frame(train.mape, test.mape)
library("forecast")
library(tidyverse)
library(vctrs)
library(lubridate)
library("tseries")
library(TSstudio)
amazon=read.csv("C:/Users/gundawade.p/OneDrive - Procter and Gamble/Documents/Spring 2020/Forecasting/Project/Time-Series/AMZN.csv")
amazon$month <- as.factor(month.abb[(month(amazon$Date))])
levels(amazon$Months)
amazon$year <- as.factor(year(amazon$Date))
amazon <- amazon %>%
mutate(Months = fct_relevel(month,"Jan",
"Feb",
"Mar",
"Apr",
"May",
"Jun",
"Jul",
"Aug",
"Sep",
"Oct",
"Nov",
"Dec"))
amazon.vol <- amazon %>%
filter(year!=2020 & year!=2015) %>%
select (Volume)
amazon.vol.ts<-ts(amazon.vol,frequency = 12, start = c(2016,1))
amazon.vol.ts
trainData = window(amazon.vol.ts, start=2016, end=c(2018,12))
testData = window(amazon.vol.ts, start=2019, end=c(2019,12))
ma1.101 <- arima(trainData, order=c(0,0,1), season=list(order=c(1,0,1), period=12))
ma1.101.fc <-forecast(ma1.101,h=12)
plot(ma1.101.fc)
lines(testData, col="red")
legend("topleft",lty=1,bty = "n",col=c("red","blue"),c("Test Data","ARIMA Predicted"))
forecasted.val <-forecast(ma1.101.fc,h=12)
model1.accuracy <- accuracy(forecasted.val,testData)
model1.accuracy <- data.frame(model1.accuracy)
model1.train.MAPE <- model1.accuracy[1, 'MAPE']
model1.test.MAPE <- model1.accuracy[2, 'MAPE']
ma2.101 <- arima(trainData, order=c(0,0,2), season=list(order=c(1,0,1), period=12))
ma2.101.fc <-forecast(ma2.101,h=12)
plot(ma2.101.fc)
lines(testData, col="red")
legend("topleft",lty=1,bty = "n",col=c("red","blue"),c("Test Data","ARIMA Predicted"))
forecasted.val1 <-forecast(ma2.101.fc,h=12)
model1.accuracy1 <- accuracy(forecasted.val1,testData)
model1.accuracy1 <- data.frame(model1.accuracy1)
model1.train.MAPE1 <- model1.accuracy1[1, 'MAPE']
model1.test.MAPE1 <- model1.accuracy1[2, 'MAPE']
ma2.102 <- arima(trainData, order=c(0,0,2), season=list(order=c(1,0,2), period=12))
ma2.102.fc <-forecast(ma2.102,h=12)
plot(ma2.102.fc)
lines(testData, col="red")
legend("topleft",lty=1,bty = "n",col=c("red","blue"),c("Test Data","ARIMA Predicted"))
forecasted.val2 <-forecast(ma2.102.fc,h=12)
model1.accuracy2 <- accuracy(forecasted.val2,testData)
model1.accuracy2 <- data.frame(model1.accuracy2)
model1.train.MAPE2 <- model1.accuracy2[1, 'MAPE']
model1.test.MAPE2 <- model1.accuracy2[2, 'MAPE']
ma2.112 <- arima(trainData, order=c(0,0,2), season=list(order=c(1,1,2), period=12))
ma2.112.fc <-forecast(ma2.112,h=12)
plot(ma2.112.fc)
lines(testData, col="red")
legend("topleft",lty=1,bty = "n",col=c("red","blue"),c("Test Data","ARIMA Predicted"))
forecasted.val3 <-forecast(ma2.112.fc,h=12)
model1.accuracy3 <- accuracy(forecasted.val3,testData)
model1.accuracy3 <- data.frame(model1.accuracy3)
model1.train.MAPE3 <- model1.accuracy3[1, 'MAPE']
model1.test.MAPE3 <- model1.accuracy3[2, 'MAPE']
train.mape <- c(model1.train.MAPE, model1.train.MAPE1, model1.train.MAPE2, model1.train.MAPE3)
test.mape <- c(model1.test.MAPE, model1.test.MAPE1, model1.test.MAPE2, model1.test.MAPE3)
mape <- data.frame(train.mape, test.mape)
mape
rownames(mape) <- c("ma1.101", "ma2.101", "ma2.102", "ma2.112")
mape
ma1.101 <- arima(trainData, order=c(0,0,1), season=list(order=c(1,0,0), period=12))
ma1.101.fc <-forecast(ma1.101,h=12)
plot(ma1.101.fc)
lines(testData, col="red")
legend("topleft",lty=1,bty = "n",col=c("red","blue"),c("Test Data","ARIMA Predicted"))
forecasted.val <-forecast(ma1.101.fc,h=12)
model1.accuracy <- accuracy(forecasted.val,testData)
model1.accuracy <- data.frame(model1.accuracy)
model1.train.MAPE <- model1.accuracy[1, 'MAPE']
model1.test.MAPE <- model1.accuracy[2, 'MAPE']
ma1.100 <- arima(trainData, order=c(0,0,1), season=list(order=c(1,0,0), period=12))
ma1.100.fc <-forecast(ma1.100,h=12)
plot(ma1.100.fc)
lines(testData, col="red")
legend("topleft",lty=1,bty = "n",col=c("red","blue"),c("Test Data","ARIMA Predicted"))
forecasted.val <-forecast(ma1.100.fc,h=12)
model1.accuracy11 <- accuracy(forecasted.val,testData)
model1.accuracy11 <- data.frame(model1.accuracy11)
model1.train.MAPE11 <- model1.accuracy11[1, 'MAPE']
model1.test.MAPE11 <- model1.accuracy11[2, 'MAPE']
train.mape <- c(model1.train.MAPE11, model1.train.MAPE, model1.train.MAPE1,
model1.train.MAPE2, model1.train.MAPE3)
test.mape <- c(model1.test.MAPE11, model1.test.MAPE, model1.test.MAPE1,
model1.test.MAPE2, model1.test.MAPE3)
mape <- data.frame(train.mape, test.mape)
rownames(mape) <- c("ma1.100","ma1.101", "ma2.101", "ma2.102", "ma2.112")
train.mape <- c(model1.train.MAPE11, model1.train.MAPE, model1.train.MAPE1,
model1.train.MAPE2, model1.train.MAPE3)
test.mape <- c(model1.test.MAPE11, model1.test.MAPE, model1.test.MAPE1,
model1.test.MAPE2, model1.test.MAPE3)
mape <- data.frame(train.mape, test.mape)
rownames(mape) <- c("ma1.100","ma1.101", "ma2.101", "ma2.102", "ma2.112")
mape
#AIC <- rbind(arima100$aic,arima001$aic,arima101$aic,arima200$aic)
#Summary <- data.frame(Models,AIC)
#Summary
ma1.100 <- arima(trainData, order=c(0,0,1), season=list(order=c(1,0,0), period=12))
ma1.100.fc <-forecast(ma1.100,h=12)
plot(ma1.100.fc)
lines(testData, col="red")
legend("topleft",lty=1,bty = "n",col=c("red","blue"),c("Test Data","ARIMA Predicted"))
forecasted.val11 <-forecast(ma1.100.fc,h=12)
model1.accuracy11 <- accuracy(forecasted.val11,testData)
model1.accuracy11 <- data.frame(model1.accuracy11)
model1.train.MAPE11 <- model1.accuracy11[1, 'MAPE']
model1.test.MAPE11 <- model1.accuracy11[2, 'MAPE']
ma1.101 <- arima(trainData, order=c(0,0,1), season=list(order=c(1,0,1), period=12))
ma1.101.fc <-forecast(ma1.101,h=12)
plot(ma1.101.fc)
lines(testData, col="red")
legend("topleft",lty=1,bty = "n",col=c("red","blue"),c("Test Data","ARIMA Predicted"))
forecasted.val <-forecast(ma1.101.fc,h=12)
model1.accuracy <- accuracy(forecasted.val,testData)
model1.accuracy <- data.frame(model1.accuracy)
model1.train.MAPE <- model1.accuracy[1, 'MAPE']
model1.test.MAPE <- model1.accuracy[2, 'MAPE']
ma2.101 <- arima(trainData, order=c(0,0,2), season=list(order=c(1,0,1), period=12))
ma2.101.fc <-forecast(ma2.101,h=12)
plot(ma2.101.fc)
lines(testData, col="red")
legend("topleft",lty=1,bty = "n",col=c("red","blue"),c("Test Data","ARIMA Predicted"))
forecasted.val1 <-forecast(ma2.101.fc,h=12)
model1.accuracy1 <- accuracy(forecasted.val1,testData)
model1.accuracy1 <- data.frame(model1.accuracy1)
model1.train.MAPE1 <- model1.accuracy1[1, 'MAPE']
model1.test.MAPE1 <- model1.accuracy1[2, 'MAPE']
ma2.112 <- arima(trainData, order=c(0,0,2), season=list(order=c(1,1,2), period=12))
ma2.112.fc <-forecast(ma2.112,h=12)
plot(ma2.112.fc)
lines(testData, col="red")
legend("topleft",lty=1,bty = "n",col=c("red","blue"),c("Test Data","ARIMA Predicted"))
forecasted.val3 <-forecast(ma2.112.fc,h=12)
model1.accuracy3 <- accuracy(forecasted.val3,testData)
model1.accuracy3 <- data.frame(model1.accuracy3)
model1.train.MAPE3 <- model1.accuracy3[1, 'MAPE']
model1.test.MAPE3 <- model1.accuracy3[2, 'MAPE']
train.mape <- c(model1.train.MAPE11, model1.train.MAPE, model1.train.MAPE1,
model1.train.MAPE2, model1.train.MAPE3)
test.mape <- c(model1.test.MAPE11, model1.test.MAPE, model1.test.MAPE1,
model1.test.MAPE2, model1.test.MAPE3)
mape <- data.frame(train.mape, test.mape)
rownames(mape) <- c("ma1.100","ma1.101", "ma2.101", "ma2.102", "ma2.112")
mape
#AIC <- rbind(arima100$aic,arima001$aic,arima101$aic,arima200$aic)
#Summary <- data.frame(Models,AIC)
#Summary
runApp('C:/Users/gundawade.p/OneDrive - Procter and Gamble/Work/SelfPreservation')
runApp('C:/Users/gundawade.p/OneDrive - Procter and Gamble/Work/SelfPreservation')
dplyr::select(X1_Acids_thermo,Surfactant_Name,Acid_Name)
X1_AcidsDB_2 <- read.csv(paste0(top_directory,'Databases/Kinetic_AcidsDB.csv'), header=TRUE,sep=',',quote="",fileEncoding="UTF-8-BOM",check.names = FALSE)
runApp('C:/Users/gundawade.p/OneDrive - Procter and Gamble/Work/SelfPreservation')
